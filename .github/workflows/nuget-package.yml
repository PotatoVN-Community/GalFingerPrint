name: Generate Nuget Package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  openapi:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: galfingerprint
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres" --health-interval=10s --health-timeout=5s --health-retries=5
    env:
      DB_CONNECTION_STRING: Host=postgres;Port=5432;Database=galfingerprint;Username=postgres;Password=postgres
      ASPNETCORE_ENVIRONMENT: Development
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build GalFingerPrint.Server/GalFingerPrint.Server.csproj --configuration Release --no-restore

      - name: Install Swagger CLI
        run: dotnet tool install --tool-path ./.dotnet-tools Swashbuckle.AspNetCore.Cli --version 6.6.2

      - name: Generate OpenAPI document
        run: ./.dotnet-tools/swagger tofile --output GalFingerPrint.Server/openapi.json GalFingerPrint.Server/bin/Release/net8.0/GalFingerPrint.Server.dll v1

      - name: Upload OpenAPI artifact
        uses: actions/upload-artifact@v4
        with:
          name: openapi-spec
          path: GalFingerPrint.Server/openapi.json

  generate-client-and-publish:
    needs: openapi
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Setup Node (for openapi-generator-cli)
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Download OpenAPI artifact
        uses: actions/download-artifact@v4
        with:
          name: openapi-spec
          path: ./openapi

      - name: Verify OpenAPI file
        run: |
          test -f ./openapi/openapi.json
          ls -l ./openapi

      - name: Install OpenAPI Generator CLI
        run: npm install -g @openapitools/openapi-generator-cli

      - name: Generate C# Client
        run: |
          openapi-generator-cli generate \
            -g csharp \
            -i ./openapi/openapi.json \
            -o Client.CSharp \
            --additional-properties="library=httpclient,packageName=GalFingerPrint.Client,targetFramework=net8.0,netCoreProjectFile=true,useDateTimeOffset=true,nullableReferenceTypes=true,optionalAssemblyInfo=false"

      - name: Inject package metadata and CI version
        shell: bash
        run: |
          FILE="Client.CSharp/src/GalFingerPrint.Client/GalFingerPrint.Client.csproj"
          if [ ! -f "$FILE" ]; then
            echo "Cannot find $FILE"; exit 1
          fi
          if grep -q "<Version>" "$FILE"; then
            sed -i "s|<Version>.*</Version>|<Version>1.0.${GITHUB_RUN_NUMBER}</Version>|g" "$FILE"
          else
            sed -i "/<\/PropertyGroup>/i \ \ <Version>1.0.${GITHUB_RUN_NUMBER}<\/Version>" "$FILE"
          fi
          if grep -q "<RepositoryUrl>" "$FILE"; then
            sed -i "s|<RepositoryUrl>.*</RepositoryUrl>|<RepositoryUrl>${{ github.server_url }}/${{ github.repository }}</RepositoryUrl>|g" "$FILE"
          else
            sed -i "/<\/PropertyGroup>/i \ \ <RepositoryUrl>${{ github.server_url }}/${{ github.repository }}<\/RepositoryUrl>" "$FILE"
          fi
          grep -q "<PackageLicenseExpression>" "$FILE" || sed -i "/<\/PropertyGroup>/i \ \ <PackageLicenseExpression>MIT<\/PackageLicenseExpression>" "$FILE"
          grep -q "<PackageProjectUrl>" "$FILE" || sed -i "/<\/PropertyGroup>/i \ \ <PackageProjectUrl>${{ github.server_url }}/${{ github.repository }}<\/PackageProjectUrl>" "$FILE"
          if grep -q "<ContinuousIntegrationBuild>" "$FILE"; then
            sed -i "s|<ContinuousIntegrationBuild>.*</ContinuousIntegrationBuild>|<ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>|g" "$FILE"
          else
            sed -i "/<\/PropertyGroup>/i \ \ <ContinuousIntegrationBuild>true<\/ContinuousIntegrationBuild>" "$FILE"
          fi

      - name: Restore
        run: dotnet restore Client.CSharp/src/GalFingerPrint.Client/GalFingerPrint.Client.csproj

      - name: Build
        run: dotnet build Client.CSharp/src/GalFingerPrint.Client/GalFingerPrint.Client.csproj -c Release

      - name: Pack
        run: |
          dotnet pack Client.CSharp/src/GalFingerPrint.Client/GalFingerPrint.Client.csproj \
            -c Release \
            -o /tmp/nupkg

      - name: Upload NuGet package artifact
        uses: actions/upload-artifact@v4
        with:
          name: GalFingerPrint.Client.nupkg
          path: /tmp/nupkg/*.nupkg

      - name: Publish to nuget.org
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          dotnet nuget push "/tmp/nupkg/*.nupkg" \
            --api-key "$NUGET_API_KEY" \
            --source https://api.nuget.org/v3/index.json \
            --skip-duplicate
